# Sources:
# * http://dougblack.io/words/zsh-vi-mode.html
# * http://superuser.com/a/648046
# * http://ivyl.0xcafe.eu/2013/02/03/refining-zsh
# * https://emily.st/2013/05/03/zsh-vi-cursor/

# Engage Vi mode!
bindkey -v

# Use vim cli mode
bindkey '^P' up-history
bindkey '^N' down-history

# backspace and ^h working even after
# returning from command mode
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char

# ctrl-w removed word backwards
bindkey '^w' backward-kill-word
# But treat dashes, underscores, etc. as delimiters instead of just spaces
autoload -U select-word-style
select-word-style bash

# ctrl-r starts searching history backward
bindkey '^r' history-incremental-search-backward

# Reduce delay in switching between modes
export KEYTIMEOUT=1

# Tell zsh not to wait after pressing Escape
bindkey -M vicmd '^[' undefined-key
# Don't mess with existing widgets
bindkey -rM viins '^X'
bindkey -M viins '^X,' _history-complete-newer \
                 '^X/' _history-complete-older \
                 '^X`' _bash_complete-word

# Switch the cursor between line and block modes when going between command and
# insert mode

# Modal cursor color for vi's insert/normal modes.
# * http://micahelliott.com/posts/2015-07-20-vim-zsh-tmux-cursor.html
# * http://stackoverflow.com/questions/30985436/
# * https://bbs.archlinux.org/viewtopic.php?id=95078
# * http://unix.stackexchange.com/questions/115009/
# * https://vt100.net/docs/vt510-rm/DECSCUSR.html
# * https://github.com/jszakmeister/vim-togglecursor/blob/master/plugin/togglecursor.vim
zle-line-init () {
  zle -K viins
  echo -ne "\033]12;Gray\007"
  # "6" changes to an underline
  echo -ne "\033[6 q"

  zle reset-prompt
  zle -R
}
zle -N zle-line-init

zle-keymap-select () {
  if [[ $KEYMAP == vicmd ]]; then
    if [[ -n $TMUX ]]; then
      printf "\033Ptmux;\033\033]12;red\007\033\\"
      # "2" changes to a block
      printf "\033Ptmux;\033\033[2 q\033\\"
    else
      printf "\033]12;Green\007"
      # "2" changes to a block
      printf "\033[2 q"
    fi
  else
    if [[ -n $TMUX ]]; then
      printf "\033Ptmux;\033\033]12;grey\007\033\\"
      # "6" changes to n line
      printf "\033Ptmux;\033\033[6 q\033\\"
    else
      printf "\033]12;Grey\007"
      # "6" changes to an underline
      printf "\033[6 q"
    fi
  fi

  zle reset-prompt
  zle -R
}
zle -N zle-keymap-select

# vi: ft=sh
