# A lot of this was stolen from:
#
# * https://github.com/zolrath/dotfiles/blob/master/tmux.conf
# * https://github.com/alanyjw/dotfiles/blob/master/home/.tmux.conf

run-shell "powerline-daemon -q"
if-shell "test -d /usr/local/lib/python2.7/site-packages/powerline" "source '/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'" "source '/Library/Python/2.7/site-packages/powerline/bindings/tmux/powerline.conf'"

set-window-option -g xterm-keys on

unbind C-b
set -g prefix C-Space
bind C-Space last-window

# Relax!
set -sg escape-time 0
set -sg repeat-time 600

# Rebind new-window to retain current working directory
# http://unix.stackexchange.com/questions/12032/create-new-window-with-current-directory-in-tmux
bind c new-window -c "#{pane_current_path}"

# Use Vim shortcuts for splitting panes, and also return current directory
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# Start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Use Vim-like bindings for getting around and such
setw -g mode-keys vi

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
#bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# Get around an issue with neovim and <C-h>
# See: <https://github.com/neovim/neovim/issues/2048#issuecomment-98431886>
bind -n C-h if-shell "$is_vim" "send-keys Escape '[104;5u'" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Resize pane by 10 px in each direction
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Make it easier to switch windows
# (You can also still reference windows by name)
bind e previous-window
bind C-e previous-window
bind t next-window
bind C-t next-window

# Copying is just like Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Enable mouse support
# https://gist.github.com/simme/1297707
set -g mouse-select-pane on
set -g mouse-select-window on
setw -g mode-mouse on

# Allow copy and paste with tmux, and also selenium to run properly
set -g default-command "reattach-to-user-namespace -l zsh"

# Use 256 colors, please!
# Note: This must match the same setting your terminal app is using
set -g default-terminal "xterm-256color"

# Put the status bar at the top
set -g status-position top

# Turn off status updates for right now.
# For some reason, on El Capitan, notifyd keeps spawning and using a lot of CPU
# which is causing periodic lags.
# This seems to fix it for now.
# See: <https://github.com/tmux/tmux/issues/108>
set -g status-interval 0

# Activity stuff
setw -g monitor-activity on
set -g visual-activity off

# Autorename sanely
setw -g automatic-rename on

# This is necessary for the Vim tmux-focus-events plugin to work
# See <https://github.com/tmux-plugins/vim-tmux-focus-events>
set -g focus-events on

# Make it easy to reload the config from within tmux
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"
