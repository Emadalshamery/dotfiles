#!/bin/bash

source "$HOME/.config/core-helpers.sh"

LOG_FILE_PATH=$HOME/Library/Logs/sync-obsidian-vault.log
TEMP_LOG_FILE_PATH="$(mktemp /tmp/$(basename $0).XXXXXX)" || exit 1

parse-args() {
  while [[ $# -gt 0 ]]; do
    case "${1:-}" in
      --no-color)
        set-color-mode "false"
        shift
        ;;
      --debug)
        set-debug-mode "true"
        shift
        ;;
    esac
  done
}

cleanup() {
  rm -f "$TEMP_LOG_FILE_PATH"
}

sync() {
  local output
  local exitcode
  local try=1

  command=("$HOME/.bin/sync-obsidian-vault" --repo-directory "$HOME/obsidian-vault" --primary-branch main --no-color)

  echo "Date: $(date)" | tee -a "$TEMP_LOG_FILE_PATH"
  echo "Current directory: $PWD" | tee -a "$TEMP_LOG_FILE_PATH"
  echo "Command: ${command[@]}" | tee -a "$TEMP_LOG_FILE_PATH"
  echo | tee -a "$TEMP_LOG_FILE_PATH"

  # Three retries
  while [[ $try -lt 4 ]]; do
    output=$("${command[@]}" 2>&1)
    exitcode=$?

    if [[ "$DEBUG" == "true" ]]; then
      echo "---[ START OF OUTPUT ]-----------"
      echo "$output"
      echo "---[ END OF OUTPUT   ]-----------"
    fi

    if [[ $exitcode -eq 0 ]]; then
      break
    fi

    echo "Got exit code $exitcode, trying again ($try/3 retries)."
    try=$((try+1))
    sleep 5
  done

  echo "$output" >> "$TEMP_LOG_FILE_PATH"
  echo "---------------" >> "$TEMP_LOG_FILE_PATH"
  echo >> "$TEMP_LOG_FILE_PATH"

  cat "$TEMP_LOG_FILE_PATH" >> "$LOG_FILE_PATH"

  if [[ $exitcode -eq 0 ]]; then
    /opt/homebrew/bin/terminal-notifier -title "Obsidian vault" -message "Obsidian vault synced successfully."
  else
    /opt/homebrew/bin/terminal-notifier -title "Obsidian vault" -message "Obsidian vault failed to sync. See log file for more: $LOG_FILE_PATH"
  fi

  return $exitcode
}

main() {
  local exitcode

  parse-args "$@"

  trap cleanup INT QUIT

  set +e
  sync
  set -e
  exitcode=$?

  cleanup

  return $exitcode
}

main "$@"
